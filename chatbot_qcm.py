# -*- coding: utf-8 -*-
import json
import random
import openai
import streamlit as st
import sys
import re
import pandas as pd
import os
import matplotlib.pyplot as plt

# Configuration
st.set_page_config(page_title="Chatbot QCM Maths", page_icon="üßÆ")
st.title("ü§ñ Chatbot QCM ‚Äì Maths Premi√®re (enseignement sp√©cifique)")

# Th√®mes + automatismes officiels
themes_automatismes = {
    "Calcul num√©rique et alg√©brique": "R√®gles de calcul, priorit√©s, puissances, factorisations simples, d√©veloppements simples, identit√©s remarquables.",
    "Proportions et pourcentages": "Proportionnalit√©, √©chelles, pourcentages simples et successifs, variations relatives.",
    "√âvolutions et variations": "Augmentations, diminutions, taux d‚Äô√©volution, variations compos√©es.",
    "Fonctions et repr√©sentations": "Lecture graphique, valeurs, ant√©c√©dents, variations, extrema.",
    "Statistiques": "Tableaux, diagrammes, moyennes, m√©dianes, √©tendues.",
    "Probabilit√©s": "Exp√©riences al√©atoires simples, calculs de probabilit√©s, √©v√©nements contraires."
}

# S√©lection utilisateur
chapitres = list(themes_automatismes.keys())
chapitre_choisi = st.selectbox("üìò Chapitre :", ["--- Choisir un chapitre ---"] + chapitres)
nb_questions = st.slider("Nombre de questions", 5, 20, 10)
difficulte = st.selectbox("Niveau de difficult√©", ["Facile", "Moyen", "Difficile"])
mode_examen = st.checkbox("Mode examen (corrig√© √† la fin)")

# Cl√© API
try:
    key = st.secrets["OPENAI_API_KEY"]
    key.encode("ascii")
except (KeyError, UnicodeEncod
